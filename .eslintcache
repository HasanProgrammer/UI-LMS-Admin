[{"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\index.jsx":"1","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\Root.jsx":"2","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\HomePage.jsx":"3","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\LoginPage.jsx":"4","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\CategoryPages\\CreatePage.jsx":"5","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\RolePages\\CreatePage.jsx":"6","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\CategoryPages\\EditPage.jsx":"7","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\RolePages\\IndexPage.jsx":"8","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\CategoryPages\\IndexPage.jsx":"9","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\UserPages\\CreatePage.jsx":"10","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\UserPages\\EditPage.jsx":"11","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\UserPages\\IndexPage.jsx":"12","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\MasterPage.jsx":"13","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\Commons\\SideBar.jsx":"14","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\TermPages\\CreatePage.jsx":"15","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\TermPages\\IndexPage.jsx":"16","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\VideoPages\\CreatePage.jsx":"17","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\VideoPages\\IndexPage.jsx":"18","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\TermPages\\EditPage.jsx":"19","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\VideoPages\\EditPage.jsx":"20","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\ChapterPages\\CreatePage.jsx":"21","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\ChapterPages\\IndexPage.jsx":"22","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\ChapterPages\\EditPage.jsx":"23","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\QuestionPages\\IndexPage.jsx":"24","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\AnswerPages\\IndexPage.jsx":"25","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\AnswerPages\\CreatePage.jsx":"26","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\AnswerPages\\EditPage.jsx":"27","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\TransactionPages\\IndexPage.jsx":"28"},{"size":242,"mtime":1606137428334,"results":"29","hashOfConfig":"30"},{"size":5620,"mtime":1610642315331,"results":"31","hashOfConfig":"30"},{"size":6232,"mtime":1609714981909,"results":"32","hashOfConfig":"30"},{"size":4682,"mtime":1610509603779,"results":"33","hashOfConfig":"30"},{"size":5540,"mtime":1610645626659,"results":"34","hashOfConfig":"30"},{"size":5563,"mtime":1610645626597,"results":"35","hashOfConfig":"30"},{"size":6099,"mtime":1610645543505,"results":"36","hashOfConfig":"30"},{"size":8230,"mtime":1610645626405,"results":"37","hashOfConfig":"30"},{"size":10684,"mtime":1610645488654,"results":"38","hashOfConfig":"30"},{"size":15783,"mtime":1610645626679,"results":"39","hashOfConfig":"30"},{"size":16990,"mtime":1610645626429,"results":"40","hashOfConfig":"30"},{"size":15192,"mtime":1610645626370,"results":"41","hashOfConfig":"30"},{"size":1069,"mtime":1610509641668,"results":"42","hashOfConfig":"30"},{"size":6795,"mtime":1610643832859,"results":"43","hashOfConfig":"30"},{"size":16328,"mtime":1610554537831,"results":"44","hashOfConfig":"30"},{"size":15507,"mtime":1610570865787,"results":"45","hashOfConfig":"30"},{"size":13363,"mtime":1610563620243,"results":"46","hashOfConfig":"30"},{"size":14990,"mtime":1610657864926,"results":"47","hashOfConfig":"30"},{"size":17183,"mtime":1610550411347,"results":"48","hashOfConfig":"30"},{"size":14173,"mtime":1610572286353,"results":"49","hashOfConfig":"30"},{"size":7292,"mtime":1610594458365,"results":"50","hashOfConfig":"30"},{"size":10802,"mtime":1610594741610,"results":"51","hashOfConfig":"30"},{"size":7369,"mtime":1610595229265,"results":"52","hashOfConfig":"30"},{"size":13982,"mtime":1610633254485,"results":"53","hashOfConfig":"30"},{"size":14027,"mtime":1610637673442,"results":"54","hashOfConfig":"30"},{"size":5621,"mtime":1610635025162,"results":"55","hashOfConfig":"30"},{"size":5907,"mtime":1610637673410,"results":"56","hashOfConfig":"30"},{"size":9926,"mtime":1610661670316,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"dapb20",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\index.jsx",[],["122","123"],"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\Root.jsx",[],"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\HomePage.jsx",[],"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\LoginPage.jsx",["124","125","126"],"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\CategoryPages\\CreatePage.jsx",["127","128","129"],"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\RolePages\\CreatePage.jsx",["130","131","132","133"],"import React    from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/*-------------------------------------------------------------------*/\r\n\r\n//Components\r\nimport MasterPage from \"../MasterPage\";\r\n\r\n/*-------------------------------------------------------------------*/\r\n\r\n//Configs\r\nimport Route       from \"./../../Configs/Route\";\r\nimport RouteServer from \"./../../Configs/RouteServer\";\r\n\r\n/*-------------------------------------------------------------------*/\r\n\r\n//Plugins\r\nimport Axios from \"axios\";\r\n\r\nimport { toast as Toast } from \"react-toastify\";\r\n\r\n/*-------------------------------------------------------------------*/\r\n\r\n/**\r\n * @class CreatePage\r\n */\r\nclass CreatePage extends React.Component\r\n{\r\n    /**\r\n     * @property state\r\n     */\r\n    state =\r\n    {\r\n        Name : null\r\n    };\r\n\r\n    /**\r\n     * @function constructor\r\n     * @param    props\r\n     */\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n\r\n    /**\r\n     * @function componentDidMount\r\n     */\r\n    componentDidMount()\r\n    {\r\n\r\n    }\r\n\r\n    /**\r\n     * @function render\r\n     */\r\n    render()\r\n    {\r\n        return (\r\n            <MasterPage>\r\n                <div className=\"main-content\">\r\n                    <section className=\"section\" style={{marginTop: \"-3em\"}}>\r\n                        <div className=\"section-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"card\" style={{borderRadius: \"0\"}}>\r\n                                        <div className=\"card-header\">\r\n                                            <h4 style={{fontFamily: \"IRANSans\", cursor: \"default\"}}>نقش سیستمی جدید خود را ایجاد نمایید</h4>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"> نام نقش {\" \"} <span className=\"text-danger\">*</span></label>\r\n                                                <div className=\"col-sm-12 col-md-7\" style={{borderRadius: \"0\"}}>\r\n                                                    <input placeholder=\"نام نقش مورد نظر خود را وارد نمایید\" type=\"text\" className=\"form-control\" style={{borderRadius: \"0\"}} onChange={this.onChangeTextInInputName}/>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"/>\r\n                                                <div className=\"col-sm-12 col-md-7\">\r\n                                                    <button type=\"button\" onClick={this.CreateRole} className=\"btn btn-success action_button\">ایجاد نقش سیستمی</button>\r\n                                                    <span>{\" \"}</span>\r\n                                                    <Link to={`${Route.AllRolePage}`} className=\"btn btn-primary action_button\">برگشت</Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </MasterPage>\r\n        )\r\n    }\r\n\r\n    /*---------------------------------------------------------------CUSTOM---------------------------------------------------------------*/\r\n\r\n    /**\r\n     * @function onSelectedOptionInSelectBox\r\n     */\r\n    onChangeTextInInputName = (event) =>\r\n    {\r\n        //console.log(event.target.value);\r\n\r\n        this.setState({\r\n            Name : event.target.value\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @function CreateCategory\r\n     */\r\n    CreateRole = async () =>\r\n    {\r\n        let Data = {\r\n            Name : this.state.Name\r\n        };\r\n\r\n        let Configs = {\r\n            headers : {\r\n                \"Content-Type\"  : \"application/json\",\r\n                \"Authorization\" : `${\"Bearer \" + localStorage.getItem(\"Token\")}`\r\n            }\r\n        };\r\n\r\n        await Axios.put(`${RouteServer.Root + RouteServer.CreateRole}`, JSON.stringify(Data), Configs).then(response => {\r\n\r\n            Toast.success(response?.data?.msg);\r\n\r\n        }).catch(response => {\r\n\r\n            if(response?.response?.data?.code == 403)\r\n            {\r\n                window.location.href = `${Route.LoginPage}`;\r\n                localStorage.setItem(\"Expired\", \"403\");\r\n            }\r\n            else\r\n            {\r\n                Toast.error(response.response?.data?.msg);\r\n                if(typeof response?.response?.data?.body?.errors != \"undefined\")\r\n                {\r\n                    response.response.data.body.errors.map(error => {\r\n\r\n                        Toast.error(error);\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n        });\r\n    }\r\n}\r\n\r\nexport default CreatePage;","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\CategoryPages\\EditPage.jsx",["134","135","136"],"import React from \"react\";\r\n\r\n/*-------------------------------------------------------------------*/\r\n\r\n//Components\r\nimport MasterPage from \"../MasterPage\";\r\n\r\n/*-------------------------------------------------------------------*/\r\n\r\n//Configs\r\nimport Route       from \"./../../Configs/Route\";\r\nimport RouteServer from \"./../../Configs/RouteServer\";\r\n\r\n/*-------------------------------------------------------------------*/\r\n\r\n//Plugins\r\nimport Axios      from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Link }   from \"react-router-dom\";\r\n\r\nimport { toast as Toast } from \"react-toastify\";\r\n\r\n/*-------------------------------------------------------------------*/\r\n\r\n/**\r\n * @class HomePage\r\n */\r\nclass EditPage extends React.Component\r\n{\r\n    /**\r\n     * @property state\r\n     */\r\n    state =\r\n    {\r\n        Id   : null,\r\n        Name : null\r\n    };\r\n\r\n    /**\r\n     * @function constructor\r\n     * @param    props\r\n     */\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        if(localStorage.getItem(\"Token\") !== null && jwt_decode(localStorage.getItem(\"Token\")).role !== \"Admin\")\r\n            window.location.href = `${Route.HomePage}`;\r\n    }\r\n\r\n    /**\r\n     * @function componentDidMount\r\n     */\r\n    async componentDidMount()\r\n    {\r\n        let category = JSON.parse(localStorage.getItem(\"category\"));\r\n\r\n        this.setState({\r\n            Id   : category?.id,\r\n            Name : category?.name\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @function render\r\n     */\r\n    render()\r\n    {\r\n        const ButtonEditCategoryStyle =\r\n        {\r\n            fontWeight   : \"normal\",\r\n            borderRadius : \"30px\",\r\n            fontSize     : \"15px\",\r\n            padding      : \"0.8em\",\r\n            width        : \"13em\"\r\n        };\r\n\r\n        return (\r\n            <MasterPage>\r\n                <div className=\"main-content\">\r\n                    <section className=\"section\" style={{marginTop: \"-3em\"}}>\r\n                        <div className=\"section-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"card\" style={{borderRadius: \"0\"}}>\r\n                                        <div className=\"card-header\">\r\n                                            <h4 style={{fontFamily: \"IRANSans\", cursor: \"default\"}}>دسته بندی خود را ویرایش نمایید</h4>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"> نام دسته بندی{\" \"} <span className=\"text-danger\">*</span></label>\r\n                                                <div className=\"col-sm-12 col-md-7\" style={{borderRadius: \"0\"}}>\r\n                                                    <input value={this.state.Name} type=\"text\" className=\"form-control\" style={{borderRadius: \"0\"}} onChange={this.onChangeTextInInputName}/>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"/>\r\n                                                <div className=\"col-sm-12 col-md-7\">\r\n                                                    <button type=\"button\" id={this.state.Id} onClick={this.EditCategory} className=\"btn btn-success action_button\">ویرایش دسته بندی</button>\r\n                                                    <span>{\" \"}</span>\r\n                                                    <Link to={`${Route.AllCategoryPage}`} className=\"btn btn-primary action_button\">برگشت</Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </MasterPage>\r\n        );\r\n    }\r\n\r\n    /*---------------------------------------------------------------CUSTOM---------------------------------------------------------------*/\r\n\r\n    /**\r\n     * @function onSelectedOptionInSelectBox\r\n     */\r\n    onChangeTextInInputName = (event) =>\r\n    {\r\n        this.setState({\r\n            Name: event.target.value\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @function CreateCategory\r\n     */\r\n    EditCategory = async () =>\r\n    {\r\n        let Data =\r\n        {\r\n            Name : this.state.Name\r\n        };\r\n\r\n        let Configs = {\r\n            headers : {\r\n                \"Content-Type\"  : \"application/json\",\r\n                \"Authorization\" : `${\"Bearer \" + localStorage.getItem(\"Token\")}`\r\n            }\r\n        };\r\n\r\n        if(this.state.Id != null)\r\n        {\r\n            await Axios.patch(`${RouteServer.Root + RouteServer.EditCategory + this.state.Id}`, JSON.stringify(Data), Configs).then(response => {\r\n\r\n                Toast.success(response?.data?.msg);\r\n\r\n            }).catch(response => {\r\n\r\n                if(response?.response?.data?.code == 403)\r\n                {\r\n                    window.location.href = `${Route.LoginPage}`;\r\n                    localStorage.setItem(\"Expired\", \"403\");\r\n                }\r\n                else\r\n                {\r\n                    Toast.error(response.response?.data?.msg);\r\n                    if(typeof response?.response?.data?.body?.errors != \"undefined\")\r\n                    {\r\n                        response.response.data.body.errors.map(error => {\r\n\r\n                            Toast.error(error);\r\n\r\n                        });\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default EditPage;","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\RolePages\\IndexPage.jsx",["137","138","139","140","141","142"],"import React    from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/*-------------------------------------------------------------------*/\r\n\r\n//Components\r\nimport MasterPage from \"../MasterPage\";\r\n\r\n/*-------------------------------------------------------------------*/\r\n\r\n//Configs\r\nimport Route            from \"./../../Configs/Route\";\r\nimport RouteServer      from \"./../../Configs/RouteServer\";\r\nimport PaginationConfig from \"./../../Configs/Pagination.json\";\r\n\r\n/*-------------------------------------------------------------------*/\r\n\r\n//Plugins\r\nimport swal          from \"sweetalert\";\r\nimport Axios         from \"axios\";\r\nimport jwt_decode    from \"jwt-decode\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport { toast as Toast } from \"react-toastify\";\r\n\r\n/*-------------------------------------------------------------------*/\r\n\r\n/**\r\n * @class HomePage\r\n */\r\nclass IndexPage extends React.Component\r\n{\r\n    /**\r\n     * @property state\r\n     */\r\n    state =\r\n    {\r\n        Roles             : [],\r\n        CurrentPageNumber : null,\r\n        CountSizePerPage  : null,\r\n        TotalPages        : null,\r\n        HasNextPage       : false,\r\n        HasPrevPage       : false\r\n    };\r\n\r\n    /**\r\n     * @function constructor\r\n     * @param    props\r\n     */\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        if(localStorage.getItem(\"Token\") !== null && jwt_decode(localStorage.getItem(\"Token\")).role !== \"Admin\")\r\n            window.location.href = `${Route.HomePage}`;\r\n    }\r\n\r\n    /**\r\n     * @function componentDidMount\r\n     */\r\n    async componentDidMount()\r\n    {\r\n        let Configs = {\r\n            headers : {\r\n                \"Authorization\" : `${\"Bearer \" + localStorage.getItem(\"Token\")}`\r\n            }\r\n        };\r\n\r\n        await Axios.get(`${RouteServer.Root + RouteServer.AllRole + \"?PageNumber=1&CountSizePerPage=\" + PaginationConfig.CountItemPerPage}`, Configs).then(response => {\r\n\r\n            let paginationHeader = JSON.parse(response.headers[\"x-pagination\"]);\r\n\r\n            this.setState({\r\n                Roles             : response?.data?.body?.roles,\r\n                CurrentPageNumber : paginationHeader?.CurrentPage,\r\n                CountSizePerPage  : paginationHeader?.CountSizePerPage,\r\n                TotalPages        : paginationHeader?.TotalPages,\r\n                HasNextPage       : paginationHeader?.HasNext,\r\n                HasPrevPage       : paginationHeader?.HasPrev\r\n            });\r\n\r\n        }).catch(response => {\r\n\r\n            if(response?.response?.data?.code == 403)\r\n            {\r\n                window.location.href = `${Route.LoginPage}`;\r\n                localStorage.setItem(\"Expired\", \"403\");\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @function render\r\n     */\r\n    render()\r\n    {\r\n        const SelectBoxStyle =\r\n        {\r\n            borderRadius: \"0\"\r\n        };\r\n\r\n        const BadgeStyle =\r\n        {\r\n            borderRadius: \"0\"\r\n        };\r\n\r\n        let Pagination = null;\r\n        if(this.state.TotalPages > 0)\r\n        {\r\n            Pagination = <ReactPaginate\r\n                            className=\"pagination\"\r\n                            previousLabel={'قبلی'}\r\n                            nextLabel={'بعدی'}\r\n                            breakLabel={'...'}\r\n                            breakClassName={'break-me'}\r\n                            pageCount={this.state.TotalPages}\r\n                            marginPagesDisplayed={3}\r\n                            pageRangeDisplayed={5}\r\n                            containerClassName={'pagination'}\r\n                            subContainerClassName={'pages pagination'}\r\n                            activeClassName={'active'}\r\n\r\n                            onPageChange={this.onClickPaginateLink}\r\n                        />\r\n        }\r\n\r\n        return (\r\n            <MasterPage>\r\n                <div className=\"main-content\">\r\n                    <section className=\"section\" style={{marginTop: \"-3em\"}}>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"card\" style={{borderRadius: \"0\"}}>\r\n                                    <div className=\"card-header\">\r\n                                        <h4 style={{cursor: \"default\", fontFamily: \"IRANSans\"}}>همه نقش های سیستمی</h4>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"float-right\">\r\n                                            <Link className=\"btn btn-success action_button\" to={`${Route.CreateRolePage}`}>\r\n                                                <span>ساخت نقش جدید</span>\r\n                                            </Link>\r\n                                        </div>\r\n\r\n                                        <div className=\"clearfix mb-3\"/>\r\n                                        <div className=\"table-responsive\">\r\n                                            <table className=\"table table-striped\">\r\n                                                <tbody>\r\n                                                <tr>\r\n                                                    <th className=\"cell\">ردیف</th>\r\n                                                    <th className=\"cell\">نام نقش سیستمی</th>\r\n                                                    <th className=\"cell\">تعداد کاربران</th>\r\n                                                </tr>\r\n                                                {\r\n                                                    this.state.Roles.map((role, index) => (\r\n                                                        <tr>\r\n                                                            <td className=\"cell\">\r\n                                                                {index + 1}\r\n                                                            </td>\r\n                                                            <td className=\"cell\">{role.roleName}</td>\r\n                                                            <td className=\"cell\">{role.countUser}</td>\r\n                                                        </tr>\r\n                                                    ))\r\n                                                }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </section>\r\n                    {Pagination}\r\n                </div>\r\n            </MasterPage>\r\n        );\r\n    }\r\n\r\n    /*---------------------------------------------------------------CUSTOM---------------------------------------------------------------*/\r\n\r\n    onClickPaginateLink = async (page) =>\r\n    {\r\n        let Configs = {\r\n            headers : {\r\n                \"Authorization\" : `${\"Bearer \" + localStorage.getItem(\"Token\")}`\r\n            }\r\n        };\r\n\r\n        await Axios.get(`${RouteServer.Root + RouteServer.AllRole + \"?PageNumber=\" +  ( page.selected + 1 ) + \"&CountSizePerPage=\" + PaginationConfig.CountItemPerPage}`, Configs).then(response => {\r\n\r\n            let paginationHeader = JSON.parse(response.headers[\"x-pagination\"]);\r\n\r\n            this.setState({\r\n                Roles             : response?.data?.body?.roles,\r\n                CurrentPageNumber : paginationHeader?.CurrentPage,\r\n                CountSizePerPage  : paginationHeader?.CountSizePerPage,\r\n                TotalPages        : paginationHeader?.TotalPages,\r\n                HasNextPage       : paginationHeader?.HasNext,\r\n                HasPrevPage       : paginationHeader?.HasPrev\r\n            });\r\n\r\n        }).catch(response => {\r\n\r\n            if(response?.response?.data?.code == 403)\r\n            {\r\n                window.location.href = `${Route.LoginPage}`;\r\n                localStorage.setItem(\"Expired\", \"403\");\r\n            }\r\n\r\n        });\r\n    }\r\n}\r\n\r\nexport default IndexPage;","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\CategoryPages\\IndexPage.jsx",["143","144","145","146","147","148","149"],"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\UserPages\\CreatePage.jsx",["150","151","152","153","154","155","156"],"import React    from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/*-------------------------------------------------------------------*/\r\n\r\n//Components\r\nimport MasterPage from \"../MasterPage\";\r\n\r\n/*-------------------------------------------------------------------*/\r\n\r\n//Configs\r\nimport Route       from \"./../../Configs/Route\";\r\nimport RouteServer from \"./../../Configs/RouteServer\";\r\n\r\n/*-------------------------------------------------------------------*/\r\n\r\n//Plugins\r\nimport Axios from \"axios\";\r\nimport { toast as Toast } from \"react-toastify\";\r\n\r\n/*-------------------------------------------------------------------*/\r\n\r\n/**\r\n * @class CreatePage\r\n */\r\nclass CreatePage extends React.Component\r\n{\r\n    /**\r\n     * @property state\r\n     */\r\n    state =\r\n    {\r\n        Username     : null,\r\n        Password     : null,\r\n        Email        : null,\r\n        Phone        : null,\r\n        Description  : null,\r\n        Expert       : null,\r\n        Image        : null,\r\n        Roles        : [],   /*برای نمایش*/\r\n        RolesId      : [],   /*برای ارسال به سمت سرور*/\r\n        ImagePreview : null\r\n    };\r\n\r\n    /**\r\n     * @function constructor\r\n     * @param    props\r\n     */\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n\r\n    /**\r\n     * @function componentDidMount\r\n     */\r\n    async componentDidMount()\r\n    {\r\n        let Configs = {\r\n            headers : {\r\n                \"Authorization\" : `${\"Bearer \" + localStorage.getItem(\"Token\")}`\r\n            }\r\n        };\r\n\r\n        await Axios.get(`${RouteServer.Root + RouteServer.AllRole}`, Configs).then(response => {\r\n\r\n            this.setState({\r\n                Roles : response?.data?.body?.roles\r\n            });\r\n\r\n        }).catch(response => {\r\n\r\n            if(response?.response?.data?.code == 403)\r\n            {\r\n                window.location.href = `${Route.LoginPage}`;\r\n                localStorage.removeItem(\"Token\");\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @function render\r\n     */\r\n    render()\r\n    {\r\n        return (\r\n            <MasterPage>\r\n                <div className=\"main-content\">\r\n                    <section className=\"section\" style={{marginTop: \"-3em\"}}>\r\n                        <div className=\"section-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"card\" style={{borderRadius: \"0\"}}>\r\n                                        <div className=\"card-header\">\r\n                                            <h4 style={{fontFamily: \"IRANSans\", cursor: \"default\"}}>کاربر جدید خود را بسازید</h4>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"> نام کاربری {\" \"} <span className=\"text-danger\">*</span></label>\r\n                                                <div className=\"col-sm-12 col-md-7\" style={{borderRadius: \"0\"}}>\r\n                                                    <input placeholder=\"نام کاربری خود را وارد نمایید\" type=\"text\" className=\"form-control\" style={{borderRadius: \"0\"}} onChange={this.onChangeTextInInputUsername}/>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"> رمز عبوری {\" \"} <span className=\"text-danger\">*</span></label>\r\n                                                <div className=\"col-sm-12 col-md-7\" style={{borderRadius: \"0\"}}>\r\n                                                    <input placeholder=\"رمز عبور خود را وارد نمایید\" type=\"text\" className=\"form-control\" style={{borderRadius: \"0\"}} onChange={this.onChangeTextInInputPassword}/>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"> پست الکترونیکی{\" \"} <span className=\"text-danger\">*</span></label>\r\n                                                <div className=\"col-sm-12 col-md-7\" style={{borderRadius: \"0\"}}>\r\n                                                    <input placeholder=\"پست الکترونیکی خود را وارد نمایید\" type=\"text\" className=\"form-control\" style={{borderRadius: \"0\"}} onChange={this.onChangeTextInInputEmail}/>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"> تلفن تماس{\" \"} <span className=\"text-danger\">*</span></label>\r\n                                                <div className=\"col-sm-12 col-md-7\" style={{borderRadius: \"0\"}}>\r\n                                                    <input placeholder=\"شماره تلفن تماس ( تلفن همراه ) خود را وارد نمایید\" type=\"text\" className=\"form-control\" style={{borderRadius: \"0\"}} onChange={this.onChangeTextInInputPhone}/>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"> معرفی{\" \"} <span className=\"text-danger\">*</span></label>\r\n                                                <div className=\"col-sm-12 col-md-7\" style={{borderRadius: \"0\"}}>\r\n                                                    <textarea placeholder=\"چند جمله ای درباره کاربر فعلی بنویسید\" className=\"form-control\" style={{borderRadius: \"0\"}} onChange={this.onChangeTextInInputDescription}/>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"> تخصص{\" \"} <span className=\"text-danger\">*</span></label>\r\n                                                <div className=\"col-sm-12 col-md-7\" style={{borderRadius: \"0\"}}>\r\n                                                    <input placeholder=\"تخصص کاربر فعلی را وارد نمایید\" className=\"form-control\" style={{borderRadius: \"0\"}} onChange={this.onChangeTextInInputExpert}/>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"> تصویر شاخص{\" \"} <span className=\"text-danger\">*</span></label>\r\n                                                <div className=\"col-sm-12 col-md-7\" style={{borderRadius: \"0\"}}>\r\n                                                    <input type=\"file\" className=\"hasan-file-input\" onChange={this.onChangeTextInInputImage}/>\r\n                                                    <br/>\r\n                                                    {\r\n                                                        this.state.ImagePreview != null\r\n                                                        ?\r\n                                                        (\r\n                                                            <>\r\n                                                                <br/>\r\n                                                                <img src={this.state.ImagePreview} className='img-thumbnail' style={{borderRadius: '0', width: '10em', height: '10em'}}/>\r\n                                                            </>\r\n                                                        )\r\n                                                        :\r\n                                                        null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"> نقش های سیستمی{\" \"} <span className=\"text-danger\">*</span></label>\r\n                                                <div className=\"col-sm-12 col-md-7\" style={{borderRadius: \"0\"}}>\r\n                                                    <select multiple className=\"form-control\" style={{borderRadius: \"0\", minHeight: \"10em\"}} onChange={this.onSelectedOptionInSelectBox}>\r\n                                                        { this.state.Roles?.map(role => ( <option value={role.roleId}>{role.roleName}</option> )) }\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"/>\r\n                                                <div className=\"col-sm-12 col-md-7\">\r\n                                                    <button type=\"button\" onClick={this.CreateUser} className=\"btn btn-success action_button\">ایجاد کاربر</button>\r\n                                                    <span>{\" \"}</span>\r\n                                                    <Link to={`${Route.AllUserPage}`} className=\"btn btn-primary action_button\">برگشت</Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </MasterPage>\r\n        )\r\n    }\r\n\r\n    /*---------------------------------------------------------------CUSTOM---------------------------------------------------------------*/\r\n\r\n    /**\r\n     * @function onSelectedOptionInSelectBox\r\n     */\r\n    onSelectedOptionInSelectBox = (event) =>\r\n    {\r\n        let roles   = [];\r\n        let options = event.target.options;\r\n\r\n        for (let i = 0; i < options.length; i++)\r\n            if(options[i].selected) roles.push(options[i].value);\r\n\r\n        this.setState({\r\n            RolesId : roles\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @function onChangeTextInInputUsername\r\n     */\r\n    onChangeTextInInputUsername = (event) =>\r\n    {\r\n        //console.log(event.target.value);\r\n\r\n        this.setState({\r\n            Username : event.target.value\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @function onChangeTextInInputPassword\r\n     */\r\n    onChangeTextInInputPassword = (event) =>\r\n    {\r\n        //console.log(event.target.value);\r\n\r\n        this.setState({\r\n            Password : event.target.value\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @function onChangeTextInInputEmail\r\n     */\r\n    onChangeTextInInputEmail = (event) =>\r\n    {\r\n        //console.log(event.target.value);\r\n\r\n        this.setState({\r\n            Email : event.target.value\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @function onChangeTextInInputPhone\r\n     */\r\n    onChangeTextInInputPhone = (event) =>\r\n    {\r\n        //console.log(event.target.value);\r\n\r\n        this.setState({\r\n            Phone : event.target.value\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @function onChangeTextInInputDescription\r\n     */\r\n    onChangeTextInInputDescription = (event) =>\r\n    {\r\n        //console.log(event.target.value);\r\n\r\n        this.setState({\r\n            Description : event.target.value\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @function onChangeTextInInputExpert\r\n     */\r\n    onChangeTextInInputExpert = (event) =>\r\n    {\r\n        //console.log(event.target.value);\r\n\r\n        this.setState({\r\n            Expert : event.target.value\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @function onChangeTextInInputImage\r\n     */\r\n    onChangeTextInInputImage = (event) =>\r\n    {\r\n        if (event.target.files && event.target.files[0])\r\n        {\r\n            let reader = new FileReader();\r\n            reader.readAsDataURL(event.target.files[0]);\r\n\r\n            reader.onload = (e) =>\r\n            {\r\n                this.setState({\r\n                    Image        : event.target.files[0],\r\n                    ImagePreview : reader.result\r\n                });\r\n            };\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @function CreateCategory\r\n     */\r\n    CreateUser = async () =>\r\n    {\r\n        let Configs = {\r\n            headers : {\r\n                \"Content-Type\"  : \"multipart/form-data\",\r\n                \"Authorization\" : `${\"Bearer \" + localStorage.getItem(\"Token\")}`\r\n            }\r\n        };\r\n\r\n        let formData = new FormData();\r\n\r\n        if(this.state.Username    != null) formData.append(\"Username\"    , this.state.Username);\r\n        if(this.state.Password    != null) formData.append(\"Password\"    , this.state.Password);\r\n        if(this.state.Email       != null) formData.append(\"Email\"       , this.state.Email);\r\n        if(this.state.Phone       != null) formData.append(\"Phone\"       , this.state.Phone);\r\n        if(this.state.Description != null) formData.append(\"Description\" , this.state.Description);\r\n        if(this.state.Expert      != null) formData.append(\"Expert\"      , this.state.Expert);\r\n\r\n        if(this.state.RolesId.length > 0)\r\n            this.state.RolesId.map(role => formData.append(\"Roles[]\" , role));\r\n\r\n        formData.append(\"image\" , this.state.Image);\r\n\r\n        await Axios.put(`${RouteServer.Root + RouteServer.CreateUser}`, formData, Configs).then(response => {\r\n\r\n            if(response?.data?.code == 201 || response?.data?.code == 200)\r\n                Toast.success(response?.data?.msg);\r\n            else\r\n                Toast.error(response?.data?.msg);\r\n\r\n        }).catch(response => {\r\n\r\n            if(response?.response?.data?.code == 403)\r\n            {\r\n                window.location.href = `${Route.LoginPage}`;\r\n                localStorage.removeItem(\"Token\");\r\n            }\r\n            else\r\n            {\r\n                Toast.error(response.response?.data?.msg);\r\n                if(typeof response?.response?.data?.body?.errors != \"undefined\")\r\n                {\r\n                    response.response.data.body.errors.map(error => {\r\n\r\n                        Toast.error(error);\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n        });\r\n    }\r\n}\r\n\r\nexport default CreatePage;","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\UserPages\\EditPage.jsx",["157","158","159","160","161","162","163"],"import React    from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/*-------------------------------------------------------------------*/\r\n\r\n//Components\r\nimport MasterPage from \"../MasterPage\";\r\n\r\n/*-------------------------------------------------------------------*/\r\n\r\n//Configs\r\nimport Route       from \"./../../Configs/Route\";\r\nimport RouteServer from \"./../../Configs/RouteServer\";\r\n\r\n/*-------------------------------------------------------------------*/\r\n\r\n//Plugins\r\nimport Axios      from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { toast as Toast } from \"react-toastify\";\r\n\r\n/*-------------------------------------------------------------------*/\r\n\r\n/**\r\n * @class CreatePage\r\n */\r\nclass EditPage extends React.Component\r\n{\r\n    /**\r\n     * @property state\r\n     */\r\n    state =\r\n    {\r\n        UserId       : null,\r\n        Username     : null,\r\n        Password     : null,\r\n        Phone        : null,\r\n        Email        : null,\r\n        Description  : null,\r\n        Expert       : null,\r\n        Image        : null,\r\n        Roles        : [],   /*برای نمایش*/\r\n        RolesId      : [],   /*برای ارسال به سمت سرور*/\r\n        ImagePreview : null\r\n    };\r\n\r\n    /**\r\n     * @function constructor\r\n     * @param    props\r\n     */\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        if(localStorage.getItem(\"Token\") !== null && jwt_decode(localStorage.getItem(\"Token\")).role === \"Admin\")\r\n            window.location.href = `${Route.HomePage}`;\r\n    }\r\n\r\n    /**\r\n     * @function componentDidMount\r\n     */\r\n    async componentDidMount()\r\n    {\r\n        let Configs = {\r\n            headers : {\r\n                \"Authorization\" : `${\"Bearer \" + localStorage.getItem(\"Token\")}`\r\n            }\r\n        };\r\n\r\n        if(localStorage.getItem(\"user\") != null)\r\n        {\r\n            let user   = JSON.parse(localStorage.getItem(\"user\"));\r\n            let roleId = [];\r\n\r\n            user.roles?.map(role => roleId.push(role.roleId));\r\n\r\n            await Axios.get(`${RouteServer.Root + RouteServer.AllRole}`, Configs).then(response => {\r\n\r\n                this.setState({\r\n                    UserId       : user?.id,\r\n                    Username     : user?.userName,\r\n                    Email        : user?.email,\r\n                    Phone        : user?.phone,\r\n                    Description  : user?.description,\r\n                    Expert       : user?.expert,\r\n                    RolesId      : roleId,\r\n                    Roles        : response?.data?.body?.roles,\r\n                    ImagePreview : `${RouteServer.Root + \"/\" + user.image}`\r\n                });\r\n\r\n            }).catch(response => {\r\n\r\n                if(response?.response?.data?.code == 403)\r\n                {\r\n                    window.location.href = `${Route.LoginPage}`;\r\n                    localStorage.removeItem(\"Token\");\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @function render\r\n     */\r\n    render()\r\n    {\r\n        console.log(this.state.RolesId);\r\n\r\n        return (\r\n            <MasterPage>\r\n                <div className=\"main-content\">\r\n                    <section className=\"section\" style={{marginTop: \"-3em\"}}>\r\n                        <div className=\"section-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"card\" style={{borderRadius: \"0\"}}>\r\n                                        <div className=\"card-header\">\r\n                                            <h4 style={{fontFamily: \"IRANSans\", cursor: \"default\"}}>کاربر خود را ویرایش نمایید</h4>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"> نام کاربری {\" \"} <span className=\"text-danger\">*</span></label>\r\n                                                <div className=\"col-sm-12 col-md-7\" style={{borderRadius: \"0\"}}>\r\n                                                    <input value={this.state.Username} placeholder=\"نام کاربری خود را وارد نمایید\" type=\"text\" className=\"form-control\" style={{borderRadius: \"0\"}} onChange={this.onChangeTextInInputUsername}/>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"> رمز عبوری </label>\r\n                                                <div className=\"col-sm-12 col-md-7\" style={{borderRadius: \"0\"}}>\r\n                                                    <input placeholder=\"رمز عبور خود را وارد نمایید\" type=\"text\" className=\"form-control\" style={{borderRadius: \"0\"}} onChange={this.onChangeTextInInputPassword}/>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"> پست الکترونیکی{\" \"} <span className=\"text-danger\">*</span></label>\r\n                                                <div className=\"col-sm-12 col-md-7\" style={{borderRadius: \"0\"}}>\r\n                                                    <input value={this.state.Email} placeholder=\"پست الکترونیکی خود را وارد نمایید\" type=\"text\" className=\"form-control\" style={{borderRadius: \"0\"}} onChange={this.onChangeTextInInputEmail}/>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"> تلفن تماس{\" \"} <span className=\"text-danger\">*</span></label>\r\n                                                <div className=\"col-sm-12 col-md-7\" style={{borderRadius: \"0\"}}>\r\n                                                    <input value={this.state.Phone} placeholder=\"شماره تلفن تماس ( تلفن همراه ) خود را وارد نمایید\" type=\"text\" className=\"form-control\" style={{borderRadius: \"0\"}} onChange={this.onChangeTextInInputPhone}/>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"> معرفی{\" \"} <span className=\"text-danger\">*</span></label>\r\n                                                <div className=\"col-sm-12 col-md-7\" style={{borderRadius: \"0\"}}>\r\n                                                    <textarea value={this.state.Description} placeholder=\"چند جمله ای درباره کاربر فعلی بنویسید\" className=\"form-control\" style={{borderRadius: \"0\", minHeight: \"10em\"}} onChange={this.onChangeTextInInputDescription}/>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"> تخصص{\" \"} <span className=\"text-danger\">*</span></label>\r\n                                                <div className=\"col-sm-12 col-md-7\" style={{borderRadius: \"0\"}}>\r\n                                                    <input value={this.state.Expert} placeholder=\"تخصص کاربر فعلی را وارد نمایید\" className=\"form-control\" style={{borderRadius: \"0\"}} onChange={this.onChangeTextInInputExpert}/>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"> تصویر شاخص{\" \"} <span className=\"text-danger\">*</span></label>\r\n                                                <div className=\"col-sm-12 col-md-7\" style={{borderRadius: \"0\"}}>\r\n                                                    <input type=\"file\" className=\"hasan-file-input\" onChange={this.onChangeTextInInputImage}/>\r\n                                                    <br/>\r\n                                                    {\r\n                                                        this.state.ImagePreview != null\r\n                                                        ?\r\n                                                        (\r\n                                                            <>\r\n                                                                <br/>\r\n                                                                <img src={this.state.ImagePreview} className='img-thumbnail' style={{borderRadius: '0', width: '10em', height: '10em'}}/>\r\n                                                            </>\r\n                                                        )\r\n                                                        :\r\n                                                        null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"> نقش های سیستمی{\" \"} <span className=\"text-danger\">*</span></label>\r\n                                                <div className=\"col-sm-12 col-md-7\" style={{borderRadius: \"0\"}}>\r\n                                                    <select multiple className=\"form-control\" style={{borderRadius: \"0\", minHeight: \"10em\"}} onChange={this.onSelectedOptionInSelectBox}>\r\n                                                        { this.state.Roles?.map(role => ( <option selected={ this.state.RolesId.some(item => item === role.roleId) } value={role.roleId}>{role.roleName}</option> )) }\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label className=\"col-form-label text-md-right col-12 col-md-3 col-lg-3\"/>\r\n                                                <div className=\"col-sm-12 col-md-7\">\r\n                                                    <button type=\"button\" id={this.state.UserId} onClick={this.EditUser} className=\"btn btn-success action_button\">ویرایش کاربر</button>\r\n                                                    <span>{\" \"}</span>\r\n                                                    <Link to={`${Route.AllUserPage}`} className=\"btn btn-primary action_button\">برگشت</Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </MasterPage>\r\n        )\r\n    }\r\n\r\n    /*---------------------------------------------------------------CUSTOM---------------------------------------------------------------*/\r\n\r\n    /**\r\n     * @function onSelectedOptionInSelectBox\r\n     */\r\n    onSelectedOptionInSelectBox = (event) =>\r\n    {\r\n        let roles   = [];\r\n        let options = event.target.options;\r\n\r\n        for (let i = 0; i < options.length; i++)\r\n            if(options[i].selected) roles.push(options[i].value);\r\n\r\n        this.setState({\r\n            RolesId : roles\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @function onChangeTextInInputUsername\r\n     */\r\n    onChangeTextInInputUsername = (event) =>\r\n    {\r\n        //console.log(event.target.value);\r\n\r\n        this.setState({\r\n            Username : event.target.value\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @function onChangeTextInInputPassword\r\n     */\r\n    onChangeTextInInputPassword = (event) =>\r\n    {\r\n        //console.log(event.target.value);\r\n\r\n        this.setState({\r\n            Password : event.target.value\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @function onChangeTextInInputEmail\r\n     */\r\n    onChangeTextInInputEmail = (event) =>\r\n    {\r\n        //console.log(event.target.value);\r\n\r\n        this.setState({\r\n            Email : event.target.value\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @function onChangeTextInInputPhone\r\n     */\r\n    onChangeTextInInputPhone = (event) =>\r\n    {\r\n        //console.log(event.target.value);\r\n\r\n        this.setState({\r\n            Phone : event.target.value\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @function onChangeTextInInputDescription\r\n     */\r\n    onChangeTextInInputDescription = (event) =>\r\n    {\r\n        //console.log(event.target.value);\r\n\r\n        this.setState({\r\n            Description : event.target.value\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @function onChangeTextInInputExpert\r\n     */\r\n    onChangeTextInInputExpert = (event) =>\r\n    {\r\n        //console.log(event.target.value);\r\n\r\n        this.setState({\r\n            Expert : event.target.value\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @function onChangeTextInInputImage\r\n     */\r\n    onChangeTextInInputImage = (event) =>\r\n    {\r\n        if (event.target.files && event.target.files[0])\r\n        {\r\n            let reader = new FileReader();\r\n            reader.readAsDataURL(event.target.files[0]);\r\n\r\n            reader.onload = (e) =>\r\n            {\r\n                this.setState({\r\n                    Image        : event.target.files[0],\r\n                    ImagePreview : reader.result\r\n                });\r\n            };\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @function CreateCategory\r\n     */\r\n    EditUser = async (event) =>\r\n    {\r\n        if(this.state.UserId != null)\r\n        {\r\n            let Configs = {\r\n                headers : {\r\n                    \"Content-Type\"  : \"multipart/form-data\",\r\n                    \"Authorization\" : `${\"Bearer \" + localStorage.getItem(\"Token\")}`\r\n                }\r\n            };\r\n\r\n            let formData = new FormData();\r\n\r\n            if(this.state.Username    != null) formData.append(\"Username\"    , this.state.Username);\r\n            if(this.state.Password    != null) formData.append(\"Password\"    , this.state.Password);\r\n            if(this.state.Email       != null) formData.append(\"Email\"       , this.state.Email);\r\n            if(this.state.Phone       != null) formData.append(\"Phone\"       , this.state.Phone);\r\n            if(this.state.Description != null) formData.append(\"Description\" , this.state.Description);\r\n            if(this.state.Expert      != null) formData.append(\"Expert\"      , this.state.Expert);\r\n\r\n            if(this.state.RolesId.length > 0)\r\n                this.state.RolesId.map(role => formData.append(\"Roles[]\" , role));\r\n\r\n            formData.append(\"image\" , this.state.Image);\r\n\r\n            await Axios.patch(`${RouteServer.Root + RouteServer.EditUser + event.target.id}`, formData, Configs).then(response => {\r\n\r\n                if(response?.data?.code == 201 || response?.data?.code == 200)\r\n                    Toast.success(response?.data?.msg);\r\n                else\r\n                    Toast.error(response?.data?.msg);\r\n\r\n            }).catch(response => {\r\n\r\n                if(response?.response?.data?.code == 403)\r\n                {\r\n                    window.location.href = `${Route.LoginPage}`;\r\n                    localStorage.setItem(\"Expired\", \"403\");\r\n                }\r\n                else\r\n                {\r\n                    Toast.error(response.response?.data?.msg);\r\n                    if(typeof response?.response?.data?.body?.errors != \"undefined\")\r\n                    {\r\n                        response.response.data.body.errors.map(error => {\r\n\r\n                            Toast.error(error);\r\n\r\n                        });\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default EditPage;","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\UserPages\\IndexPage.jsx",["164","165","166","167","168","169","170","171","172","173","174","175"],"import React    from \"react\";\nimport { Link } from \"react-router-dom\";\n\n/*-------------------------------------------------------------------*/\n\n//Components\nimport MasterPage from \"../MasterPage\";\n\n/*-------------------------------------------------------------------*/\n\n//Configs\nimport Route            from \"./../../Configs/Route\";\nimport RouteServer      from \"./../../Configs/RouteServer\";\nimport PaginationConfig from \"./../../Configs/Pagination\";\n\n/*-------------------------------------------------------------------*/\n\n//Plugins\nimport swal          from \"sweetalert\";\nimport Axios         from \"axios\";\nimport jwt_decode    from \"jwt-decode\";\nimport ReactPaginate from \"react-paginate\";\n\nimport { Modal }          from \"react-responsive-modal\";\nimport { toast as Toast } from \"react-toastify\";\n\n/*-------------------------------------------------------------------*/\n\n//Styles\nimport \"react-responsive-modal/styles.css\";\n\n/*-------------------------------------------------------------------*/\n\n/**\n * @class HomePage\n */\nclass IndexPage extends React.Component\n{\n    /**\n     * @property state\n     */\n    state =\n    {\n        Users              : [],\n        TargetUser         : null, /*برای ارسال به سمت سرور*/\n        IsOpenModal        : false,\n\n        CurrentPageNumber  : null,\n        CountSizePerPage   : null,\n        TotalPages         : null,\n        HasNextPage        : false,\n        HasPrevPage        : false\n    };\n\n    /**\n     * @function constructor\n     * @param    props\n     */\n    constructor(props)\n    {\n        super(props);\n\n        if(localStorage.getItem(\"Token\") !== null && jwt_decode(localStorage.getItem(\"Token\")).role === \"Admin\")\n            window.location.href = `${Route.HomePage}`;\n    }\n\n    /**\n     * @function componentDidMount\n     */\n    async componentDidMount()\n    {\n        let Configs = {\n            headers : {\n                \"Authorization\" : `${\"Bearer \" + localStorage.getItem(\"Token\")}`\n            }\n        };\n\n        await Axios.get(`${RouteServer.Root + RouteServer.AllUser + \"?PageNumber=1&CountSizePerPage=\" + PaginationConfig.CountItemPerPage}`, Configs).then(response => {\n\n            let paginationHeader = JSON.parse(response.headers[\"x-pagination\"]);\n\n            this.setState({\n                Users             : response?.data?.body?.users,\n                CurrentPageNumber : paginationHeader?.CurrentPage,\n                CountSizePerPage  : paginationHeader?.CountSizePerPage,\n                TotalPages        : paginationHeader?.TotalPages,\n                HasNextPage       : paginationHeader?.HasNext,\n                HasPrevPage       : paginationHeader?.HasPrev\n            });\n\n            console.log(this.state.Users);\n\n        }).catch(response => {\n\n            if(response?.response?.data?.code == 403)\n            {\n                window.location.href = `${Route.LoginPage}`;\n                localStorage.setItem(\"Expired\", \"403\");\n            }\n\n        });\n    }\n\n    /**\n     * @function render\n     */\n    render()\n    {\n        const SelectBoxStyle =\n        {\n            borderRadius: \"0\"\n        };\n\n        const BadgeStyle =\n        {\n            borderRadius: \"0\"\n        };\n\n        const ModalStyle =\n        {\n            width : \"50em\"\n        };\n\n        let Pagination = null;\n        if(this.state.TotalPages > 0)\n        {\n            Pagination = <ReactPaginate\n                            className=\"pagination\"\n                            previousLabel={'قبلی'}\n                            nextLabel={'بعدی'}\n                            breakLabel={'...'}\n                            breakClassName={'break-me'}\n                            pageCount={this.state.TotalPages}\n                            marginPagesDisplayed={3}\n                            pageRangeDisplayed={5}\n                            containerClassName={'pagination'}\n                            subContainerClassName={'pages pagination'}\n                            activeClassName={'active'}\n\n                            onPageChange={this.onClickPaginateLink}\n                        />\n        }\n\n        return (\n            <MasterPage>\n                <div className=\"main-content\">\n                    <section className=\"section\" style={{marginTop: \"-3em\"}}>\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <div className=\"card\" style={{borderRadius: \"0\"}}>\n                                    <div className=\"card-header\">\n                                        <h4 style={{cursor: \"default\", fontFamily: \"IRANSans\"}}>همه کاربران سیستم</h4>\n                                    </div>\n                                    <div className=\"card-body\">\n\n                                        <div className=\"float-right\">\n                                            <Link className=\"btn btn-success action_button\" to={`${Route.CreateUserPage}`}>\n                                                <span>ساخت کاربر جدید</span>\n                                            </Link>\n                                        </div>\n\n                                        <div className=\"clearfix mb-3\"/>\n                                        <div className=\"table-responsive\">\n                                            <table className=\"table table-striped\">\n                                                <tbody>\n                                                <tr>\n                                                    <th className=\"cell\">ردیف</th>\n                                                    <th className=\"cell\">نام کاربری</th>\n                                                    <th className=\"cell\">پست الکترونیکی</th>\n                                                    <th className=\"cell\">نقش های سیستمی</th>\n                                                    <th className=\"cell\">تصویر کاربر</th>\n                                                    <th className=\"cell\">وضعیت</th>\n                                                    <th className=\"cell\">عملیات</th>\n                                                </tr>\n                                                {\n                                                    this.state.Users?.map((user, index) => (\n                                                        <tr key={user.id}>\n                                                            <td className=\"cell\">\n                                                                {index + 1}\n                                                            </td>\n                                                            <td className=\"cell\">{user.userName}</td>\n                                                            <td className=\"cell\">{user.email}</td>\n                                                            <td className=\"cell\">\n                                                                {\n                                                                    user.roles?.map(role => (\n                                                                        <>\n                                                                            <br/>\n                                                                            <span className=\"btn btn-info\" style={{borderRadius: \"0\", padding: \"0.5em\"}}>{role?.roleName}</span>\n                                                                            <br/>\n                                                                            <br/>\n                                                                        </>\n                                                                    ))\n                                                                }\n                                                            </td>\n                                                            <td className=\"cell\">\n                                                                {\n                                                                    user.image != null\n                                                                        ?\n                                                                        <img style={{width: \"6.5em\", height: \"6.5em\", borderRadius: \"0\", margin: \"0.8em\"}}\n                                                                             src={`${RouteServer.Root}/${user.image}`} alt=\"ندارد\"/>\n                                                                        :\n                                                                        \"ندارد\"\n                                                                }\n                                                            </td>\n                                                            <td className=\"cell\">\n                                                                {user.statusValue}\n                                                            </td>\n                                                            <td className=\"cell\">\n                                                                <br/>\n                                                                <Link to={`${Route.EditUserPage.replace(\":id\", user.id)}`} id={user.id} onClick={this.onClickEditButton} className=\"btn btn-warning action_button\" style={{borderRadius: \"0\", }}>ویرایش</Link>\n                                                                <br/>\n                                                                <br/>\n                                                                {\n                                                                    user.statusKey == 1\n                                                                    ?\n                                                                    (\n                                                                        <button id={user.id} onClick={this.onClickInActiveButton} className=\"btn btn-warning action_button\" style={{borderRadius: \"0\", }}>غیر فعال</button>\n                                                                    )\n                                                                    :\n                                                                    (\n                                                                        <button id={user.id} onClick={this.onClickActiveButton} className=\"btn btn-success action_button\" style={{borderRadius: \"0\", }}>فعال</button>\n                                                                    )\n                                                                }\n                                                            </td>\n                                                        </tr>\n                                                    ))\n                                                }\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n\n                    {Pagination}\n\n                    <Modal open={this.state.IsOpenModal} onClose={this.onCloseModal} center>\n                        <div style={ModalStyle}>\n\n                        </div>\n                    </Modal>\n                </div>\n            </MasterPage>\n        );\n    }\n\n    /*---------------------------------------------------------------CUSTOM---------------------------------------------------------------*/\n\n    onClickPaginateLink = async (page) =>\n    {\n        let Configs = {\n            headers : {\n                \"Authorization\" : `${\"Bearer \" + localStorage.getItem(\"Token\")}`\n            }\n        };\n\n        await Axios.get(`${RouteServer.Root + RouteServer.AllUser + \"?PageNumber=\" +  ( page.selected + 1 ) + \"&CountSizePerPage=\" + PaginationConfig.CountItemPerPage}`, Configs).then(response => {\n\n            let paginationHeader = JSON.parse(response.headers[\"x-pagination\"]);\n\n            this.setState({\n                Users             : response?.data?.body?.users,\n                CurrentPageNumber : paginationHeader?.CurrentPage,\n                CountSizePerPage  : paginationHeader?.CountSizePerPage,\n                TotalPages        : paginationHeader?.TotalPages,\n                HasNextPage       : paginationHeader?.HasNext,\n                HasPrevPage       : paginationHeader?.HasPrev\n            });\n\n        }).catch(response => {\n\n            if(response?.response?.data?.code == 403)\n            {\n                window.location.href = `${Route.LoginPage}`;\n                localStorage.removeItem(\"Token\");\n            }\n\n        });\n    };\n\n    /**\n     * @function onClickEditButton\n     */\n    onClickEditButton = (event) =>\n    {\n        localStorage.setItem(\"user\", JSON.stringify(this.state.Users?.find(user => user.id == event.target.id)));\n    };\n\n    /**\n     * @function onClickInActiveButton\n     */\n    onClickInActiveButton = async (event) =>\n    {\n        let users = this.state.Users?.slice();\n        let user  = users.find(user => user.id == event.target.id);\n\n        user.statusKey   = 0;\n        user.statusValue = \"غیر فعال\";\n\n        let Configs = {\n            headers : {\n                \"Authorization\" : `${\"Bearer \" + localStorage.getItem(\"Token\")}`\n            }\n        };\n\n        await Axios.patch(`${RouteServer.Root + RouteServer.InActiveUser + event.target.id}`, null, Configs).then(response => {\n\n            this.setState({\n                Users : users\n            });\n\n            Toast.success(response?.data?.msg);\n\n        }).catch(response => {\n\n            if(response?.response?.data?.code == 403)\n            {\n                window.location.href = `${Route.LoginPage}`;\n                localStorage.removeItem(\"Token\");\n            }\n            else Toast.error(response?.response?.data?.msg);\n\n        });\n    };\n\n    /**\n     * @function onClickActiveButton\n     */\n    onClickActiveButton = async (event) =>\n    {\n        let users = this.state.Users?.slice();\n        let user  = users.find(user => user.id == event.target.id);\n\n        user.statusKey   = 1;\n        user.statusValue = \"فعال\";\n\n        let Configs = {\n            headers : {\n                \"Authorization\" : `${\"Bearer \" + localStorage.getItem(\"Token\")}`\n            }\n        };\n\n        await Axios.patch(`${RouteServer.Root + RouteServer.ActiveUser + event.target.id}`, null, Configs).then(response => {\n\n            this.setState({\n                Users : users\n            });\n\n            Toast.success(response?.data?.msg);\n\n        }).catch(response => {\n\n            if(response?.response?.data?.code == 403)\n            {\n                window.location.href = `${Route.LoginPage}`;\n                localStorage.removeItem(\"Token\");\n            }\n            else Toast.error(response?.response?.data?.msg);\n\n        });\n    };\n\n    onCloseModal = () =>\n    {\n        this.setState({ IsOpenModal : false });\n    }\n}\n\nexport default IndexPage;","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\MasterPage.jsx",[],"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\Commons\\SideBar.jsx",[],"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\TermPages\\CreatePage.jsx",["176","177","178","179","180","181","182"],"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\TermPages\\IndexPage.jsx",["183","184","185","186","187","188","189","190","191","192","193","194","195"],"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\VideoPages\\CreatePage.jsx",["196","197","198","199","200","201","202","203","204"],"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\VideoPages\\IndexPage.jsx",["205","206","207","208","209","210","211","212","213","214","215","216","217"],"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\TermPages\\EditPage.jsx",["218","219","220","221","222","223","224","225"],"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\VideoPages\\EditPage.jsx",["226","227","228","229","230","231","232","233","234","235","236","237"],"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\ChapterPages\\CreatePage.jsx",["238","239","240","241"],"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\ChapterPages\\IndexPage.jsx",["242","243","244","245","246","247","248","249"],"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\ChapterPages\\EditPage.jsx",["250","251","252","253","254"],"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\QuestionPages\\IndexPage.jsx",["255","256","257","258","259","260","261","262","263","264"],"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\AnswerPages\\IndexPage.jsx",["265","266","267","268","269","270","271","272","273","274","275"],"import React    from \"react\";\nimport { Link } from \"react-router-dom\";\n\n/*-------------------------------------------------------------------*/\n\n//Components\nimport MasterPage from \"../MasterPage\";\n\n/*-------------------------------------------------------------------*/\n\n//Configs\nimport Route            from \"./../../Configs/Route\";\nimport RouteServer      from \"./../../Configs/RouteServer\";\nimport PaginationConfig from \"./../../Configs/Pagination\";\n\n/*-------------------------------------------------------------------*/\n\n//Plugins\nimport swal          from \"sweetalert\";\nimport Axios         from \"axios\";\nimport ReactPaginate from \"react-paginate\";\n\nimport { Modal }          from \"react-responsive-modal\";\nimport { toast as Toast } from \"react-toastify\";\n\n/*-------------------------------------------------------------------*/\n\n//Styles\nimport \"react-responsive-modal/styles.css\";\n\n/*-------------------------------------------------------------------*/\n\n/**\n * @class HomePage\n */\nclass IndexPage extends React.Component\n{\n    /**\n     * @property state\n     */\n    state =\n    {\n        Answers            : [],\n        CurrentPageNumber  : null,\n        CountSizePerPage   : null,\n        TotalPages         : null,\n        HasNextPage        : false,\n        HasPrevPage        : false\n    };\n\n    /**\n     * @function constructor\n     * @param    props\n     */\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /**\n     * @function componentDidMount\n     */\n    async componentDidMount()\n    {\n        let Configs = {\n            headers : {\n                \"Authorization\" : `${\"Bearer \" + localStorage.getItem(\"Token\")}`\n            }\n        };\n\n        await Axios.get(`${RouteServer.Root + RouteServer.AllAnswer + this.props.match.params.id + \"?PageNumber=1&CountSizePerPage=\" + PaginationConfig.CountItemPerPage}`, Configs).then(response => {\n\n            let paginationHeader = JSON.parse(response.headers[\"x-pagination\"]);\n\n            this.setState({\n                Answers           : response?.data?.body?.answers,\n                CurrentPageNumber : paginationHeader?.CurrentPage,\n                CountSizePerPage  : paginationHeader?.CountSizePerPage,\n                TotalPages        : paginationHeader?.TotalPages,\n                HasNextPage       : paginationHeader?.HasNext,\n                HasPrevPage       : paginationHeader?.HasPrev\n            });\n\n        }).catch(response => {\n\n            if(response?.response?.data?.code == 403)\n            {\n                window.location.href = `${Route.LoginPage}`;\n                localStorage.removeItem(\"Token\")\n            }\n\n        });\n    }\n\n    /**\n     * @function render\n     */\n    render()\n    {\n        const SelectBoxStyle =\n        {\n            borderRadius: \"0\"\n        };\n\n        const BadgeStyle =\n        {\n            borderRadius: \"0\"\n        };\n\n        const ModalStyle =\n        {\n            width : \"50em\"\n        };\n\n        let Pagination = null;\n        if(this.state.TotalPages > 0)\n        {\n            Pagination = <ReactPaginate\n                            className=\"pagination\"\n                            previousLabel={'قبلی'}\n                            nextLabel={'بعدی'}\n                            breakLabel={'...'}\n                            breakClassName={'break-me'}\n                            pageCount={this.state.TotalPages}\n                            marginPagesDisplayed={3}\n                            pageRangeDisplayed={5}\n                            containerClassName={'pagination'}\n                            subContainerClassName={'pages pagination'}\n                            activeClassName={'active'}\n\n                            onPageChange={this.onClickPaginateLink}\n                        />\n        }\n\n        return (\n            <MasterPage>\n                <div className=\"main-content\">\n                    <section className=\"section\" style={{marginTop: \"-3em\"}}>\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <div className=\"card\" style={{borderRadius: \"0\"}}>\n                                    <div className=\"card-header\">\n                                        <h4 style={{cursor: \"default\", fontFamily: \"IRANSans\"}}>همه پاسخ های منتشر شده</h4>\n                                    </div>\n                                    <div className=\"card-body\">\n\n                                        <div className=\"float-right\">\n                                            <Link className=\"btn btn-success action_button\" to={`${Route.CreateAnswerPage.replace(\":id\", this.props.match.params.id)}`}>\n                                                <span>ثبت پاسخ</span>\n                                            </Link>\n\n                                            {\" \"}\n\n                                            <Link className=\"btn btn-outline-info action_button\" to={`${Route.AllQuestionPage}`}>\n                                                <span>برگشت</span>\n                                            </Link>\n                                        </div>\n\n                                        <div className=\"clearfix mb-3\"/>\n                                        <div className=\"table-responsive\">\n                                            <table className=\"table table-striped\">\n                                                <tbody>\n                                                <tr>\n                                                    <th className=\"cell\">ردیف</th>\n                                                    <th className=\"cell\">نام پاسخ دهنده</th>\n                                                    <th className=\"cell\">تصویر پاسخ دهنده</th>\n                                                    <th className=\"cell\">متن پاسخ</th>\n                                                    <th className=\"cell\">وضعیت</th>\n                                                    <th className=\"cell\">عملیات</th>\n                                                </tr>\n                                                {\n                                                    this.state.Answers?.map((answer, index) => (\n                                                        <tr>\n                                                            <td className=\"cell\">{( index + 1 )}</td>\n                                                            <td className=\"cell\">{answer.userName}</td>\n                                                            <td className=\"cell\">\n                                                                {\n                                                                    answer.userImage == null\n                                                                    ?\n                                                                    \"ندارد\"\n                                                                    :\n                                                                    (\n                                                                        <img className=\"img-thumbnail image-thumb\" src={`${RouteServer.Root + \"/\" + answer.userImage}`} alt=\"\"/>\n                                                                    )\n                                                                }\n                                                            </td>\n                                                            <td className=\"cell\">{answer.content}</td>\n                                                            <td className=\"cell\">{answer.status ? \"فعال\" : \"غیر فعال\"}</td>\n                                                            <td className=\"cell\">\n                                                                <br/>\n                                                                <Link to={`${Route.EditAnswerPage.replace(\":id\", this.props.match.params.id)}`} id={answer.id} onClick={this.onClickEditButton} className=\"btn btn-warning action_button\" style={{borderRadius: \"0\", }}>ویرایش</Link>\n                                                                <br/>\n                                                                <br/>\n                                                                {\n                                                                    answer.status\n                                                                    ?\n                                                                    (\n                                                                        <button id={answer.id} onClick={this.onClickInActiveButton} className=\"btn btn-warning action_button\" style={{borderRadius: \"0\", }}>غیر فعال</button>\n                                                                    )\n                                                                    :\n                                                                    (\n                                                                        <button id={answer.id} onClick={this.onClickActiveButton} className=\"btn btn-success action_button\" style={{borderRadius: \"0\", }}>فعال</button>\n                                                                    )\n                                                                }\n                                                                <br/>\n                                                                <br/>\n                                                            </td>\n                                                        </tr>\n                                                    ))\n                                                }\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n\n                    {Pagination}\n\n                    <Modal open={this.state.IsOpenModal} onClose={this.onCloseModal} center>\n                        <div style={ModalStyle}>\n\n                        </div>\n                    </Modal>\n                </div>\n            </MasterPage>\n        );\n    }\n\n    /*---------------------------------------------------------------CUSTOM---------------------------------------------------------------*/\n\n    onClickPaginateLink = async (page) =>\n    {\n        let Configs = {\n            headers : {\n                \"Authorization\" : `${\"Bearer \" + localStorage.getItem(\"Token\")}`\n            }\n        };\n\n        await Axios.get(`${RouteServer.Root + RouteServer.AllAnswer + this.props.match.params.id + \"?PageNumber=\" +  ( page.selected + 1 ) + \"&CountSizePerPage=\" + PaginationConfig.CountItemPerPage}`, Configs).then(response => {\n\n            let paginationHeader = JSON.parse(response.headers[\"x-pagination\"]);\n\n            this.setState({\n                Answers           : response?.data?.body?.answers,\n                CurrentPageNumber : paginationHeader?.CurrentPage,\n                CountSizePerPage  : paginationHeader?.CountSizePerPage,\n                TotalPages        : paginationHeader?.TotalPages,\n                HasNextPage       : paginationHeader?.HasNext,\n                HasPrevPage       : paginationHeader?.HasPrev\n            });\n\n        }).catch(response => {\n\n            if(response?.response?.data?.code == 403)\n            {\n                window.location.href = `${Route.LoginPage}`;\n                localStorage.removeItem(\"Token\");\n            }\n\n        });\n    };\n\n    /**\n     * @function onClickEditButton\n     */\n    onClickEditButton = (event) =>\n    {\n        localStorage.setItem(\"answer\", JSON.stringify(this.state.Answers?.find(answer => answer.id == event.target.id)));\n    };\n\n    /**\n     * @function onClickActiveButton\n     */\n    onClickActiveButton = async (event) =>\n    {\n        let answers = this.state.Answers?.slice();\n        let answer  = answers.find(answer => answer.id == event.target.id);\n\n        answer.status = true;\n\n        let Configs = {\n            headers : {\n                \"Authorization\" : `${\"Bearer \" + localStorage.getItem(\"Token\")}`\n            }\n        };\n\n        await Axios.patch(`${RouteServer.Root + RouteServer.ActiveAnswer + event.target.id}`, null, Configs).then(response => {\n\n            this.setState({\n                Questions : answers\n            });\n\n            Toast.success(response?.data?.msg);\n\n        }).catch(response => {\n\n            if(response?.response?.data?.code == 403)\n            {\n                window.location.href = `${Route.LoginPage}`;\n                localStorage.removeItem(\"Token\");\n            }\n            else Toast.error(response?.response?.data?.msg);\n\n        });\n    };\n\n    /**\n     * @function onClickInActiveButton\n     */\n    onClickInActiveButton = async (event) =>\n    {\n        let answers = this.state.Answers?.slice();\n        let answer  = answers.find(answer => answer.id == event.target.id);\n\n        answer.status = false;\n\n        let Configs = {\n            headers : {\n                \"Authorization\" : `${\"Bearer \" + localStorage.getItem(\"Token\")}`\n            }\n        };\n\n        await Axios.patch(`${RouteServer.Root + RouteServer.InActiveAnswer + event.target.id}`, null, Configs).then(response => {\n\n            this.setState({\n                Questions : answers\n            });\n\n            Toast.success(response?.data?.msg);\n\n        }).catch(response => {\n\n            if(response?.response?.data?.code == 403)\n            {\n                window.location.href = `${Route.LoginPage}`;\n                localStorage.removeItem(\"Token\");\n            }\n            else Toast.error(response?.response?.data?.msg);\n\n        });\n    };\n\n    onCloseModal = () =>\n    {\n        this.setState({ IsOpenModal : false });\n    }\n}\n\nexport default IndexPage;","C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\AnswerPages\\CreatePage.jsx",["276","277","278"],"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\AnswerPages\\EditPage.jsx",["279","280","281"],"C:\\Users\\Programmer\\Desktop\\React Projects\\lms-admin\\src\\Components\\TransactionPages\\IndexPage.jsx",["282","283","284","285","286","287","288","289","290"],{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","severity":1,"message":"296","line":2,"column":10,"nodeType":"297","messageId":"298","endLine":2,"endColumn":14},{"ruleId":"299","severity":1,"message":"300","line":27,"column":5,"nodeType":"301","messageId":"302","endLine":30,"endColumn":6},{"ruleId":"303","severity":1,"message":"304","line":113,"column":62,"nodeType":"305","messageId":"306","endLine":113,"endColumn":64},{"ruleId":"295","severity":1,"message":"307","line":21,"column":26,"nodeType":"297","messageId":"298","endLine":21,"endColumn":40},{"ruleId":"308","severity":1,"message":"309","line":136,"column":47,"nodeType":"310","messageId":"311","endLine":136,"endColumn":49},{"ruleId":"303","severity":1,"message":"304","line":146,"column":66,"nodeType":"305","messageId":"306","endLine":146,"endColumn":68},{"ruleId":"295","severity":1,"message":"307","line":19,"column":26,"nodeType":"297","messageId":"298","endLine":19,"endColumn":40},{"ruleId":"299","severity":1,"message":"300","line":40,"column":5,"nodeType":"301","messageId":"302","endLine":43,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":132,"column":47,"nodeType":"310","messageId":"311","endLine":132,"endColumn":49},{"ruleId":"303","severity":1,"message":"304","line":142,"column":66,"nodeType":"305","messageId":"306","endLine":142,"endColumn":68},{"ruleId":"295","severity":1,"message":"312","line":69,"column":15,"nodeType":"297","messageId":"298","endLine":69,"endColumn":38},{"ruleId":"308","severity":1,"message":"309","line":153,"column":51,"nodeType":"310","messageId":"311","endLine":153,"endColumn":53},{"ruleId":"303","severity":1,"message":"304","line":163,"column":70,"nodeType":"305","messageId":"306","endLine":163,"endColumn":72},{"ruleId":"295","severity":1,"message":"313","line":19,"column":8,"nodeType":"297","messageId":"298","endLine":19,"endColumn":12},{"ruleId":"295","severity":1,"message":"314","line":24,"column":19,"nodeType":"297","messageId":"298","endLine":24,"endColumn":24},{"ruleId":"308","severity":1,"message":"309","line":84,"column":47,"nodeType":"310","messageId":"311","endLine":84,"endColumn":49},{"ruleId":"295","severity":1,"message":"315","line":98,"column":15,"nodeType":"297","messageId":"298","endLine":98,"endColumn":29},{"ruleId":"295","severity":1,"message":"316","line":103,"column":15,"nodeType":"297","messageId":"298","endLine":103,"endColumn":25},{"ruleId":"308","severity":1,"message":"309","line":206,"column":47,"nodeType":"310","messageId":"311","endLine":206,"endColumn":49},{"ruleId":"308","severity":1,"message":"309","line":84,"column":47,"nodeType":"310","messageId":"311","endLine":84,"endColumn":49},{"ruleId":"295","severity":1,"message":"315","line":98,"column":15,"nodeType":"297","messageId":"298","endLine":98,"endColumn":29},{"ruleId":"295","severity":1,"message":"316","line":103,"column":15,"nodeType":"297","messageId":"298","endLine":103,"endColumn":25},{"ruleId":"308","severity":1,"message":"309","line":211,"column":47,"nodeType":"310","messageId":"311","endLine":211,"endColumn":49},{"ruleId":"308","severity":1,"message":"309","line":225,"column":108,"nodeType":"310","messageId":"311","endLine":225,"endColumn":110},{"ruleId":"308","severity":1,"message":"317","line":244,"column":84,"nodeType":"310","messageId":"311","endLine":244,"endColumn":86},{"ruleId":"308","severity":1,"message":"309","line":262,"column":51,"nodeType":"310","messageId":"311","endLine":262,"endColumn":53},{"ruleId":"299","severity":1,"message":"300","line":47,"column":5,"nodeType":"301","messageId":"302","endLine":50,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":71,"column":47,"nodeType":"310","messageId":"311","endLine":71,"endColumn":49},{"ruleId":"318","severity":1,"message":"319","line":136,"column":65,"nodeType":"320","endLine":136,"endColumn":186},{"ruleId":"308","severity":1,"message":"309","line":285,"column":37,"nodeType":"310","messageId":"311","endLine":285,"endColumn":39},{"ruleId":"308","severity":1,"message":"309","line":285,"column":68,"nodeType":"310","messageId":"311","endLine":285,"endColumn":70},{"ruleId":"308","severity":1,"message":"309","line":292,"column":47,"nodeType":"310","messageId":"311","endLine":292,"endColumn":49},{"ruleId":"303","severity":1,"message":"304","line":302,"column":66,"nodeType":"305","messageId":"306","endLine":302,"endColumn":68},{"ruleId":"299","severity":1,"message":"300","line":50,"column":5,"nodeType":"301","messageId":"302","endLine":53,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":89,"column":51,"nodeType":"310","messageId":"311","endLine":89,"endColumn":53},{"ruleId":"318","severity":1,"message":"319","line":171,"column":65,"nodeType":"320","endLine":171,"endColumn":186},{"ruleId":"308","severity":1,"message":"309","line":348,"column":41,"nodeType":"310","messageId":"311","endLine":348,"endColumn":43},{"ruleId":"308","severity":1,"message":"309","line":348,"column":72,"nodeType":"310","messageId":"311","endLine":348,"endColumn":74},{"ruleId":"308","severity":1,"message":"309","line":355,"column":51,"nodeType":"310","messageId":"311","endLine":355,"endColumn":53},{"ruleId":"303","severity":1,"message":"304","line":365,"column":70,"nodeType":"305","messageId":"306","endLine":365,"endColumn":72},{"ruleId":"295","severity":1,"message":"313","line":19,"column":8,"nodeType":"297","messageId":"298","endLine":19,"endColumn":12},{"ruleId":"299","severity":1,"message":"300","line":58,"column":5,"nodeType":"301","messageId":"302","endLine":61,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":91,"column":47,"nodeType":"310","messageId":"311","endLine":91,"endColumn":49},{"ruleId":"295","severity":1,"message":"315","line":105,"column":15,"nodeType":"297","messageId":"298","endLine":105,"endColumn":29},{"ruleId":"295","severity":1,"message":"316","line":110,"column":15,"nodeType":"297","messageId":"298","endLine":110,"endColumn":25},{"ruleId":"308","severity":1,"message":"309","line":210,"column":84,"nodeType":"310","messageId":"311","endLine":210,"endColumn":86},{"ruleId":"308","severity":1,"message":"309","line":270,"column":47,"nodeType":"310","messageId":"311","endLine":270,"endColumn":49},{"ruleId":"308","severity":1,"message":"309","line":284,"column":92,"nodeType":"310","messageId":"311","endLine":284,"endColumn":94},{"ruleId":"308","severity":1,"message":"309","line":293,"column":48,"nodeType":"310","messageId":"311","endLine":293,"endColumn":50},{"ruleId":"308","severity":1,"message":"309","line":314,"column":47,"nodeType":"310","messageId":"311","endLine":314,"endColumn":49},{"ruleId":"308","severity":1,"message":"309","line":330,"column":48,"nodeType":"310","messageId":"311","endLine":330,"endColumn":50},{"ruleId":"308","severity":1,"message":"309","line":351,"column":47,"nodeType":"310","messageId":"311","endLine":351,"endColumn":49},{"ruleId":"299","severity":1,"message":"300","line":49,"column":5,"nodeType":"301","messageId":"302","endLine":52,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":73,"column":47,"nodeType":"310","messageId":"311","endLine":73,"endColumn":49},{"ruleId":"318","severity":1,"message":"319","line":161,"column":65,"nodeType":"320","endLine":161,"endColumn":186},{"ruleId":"308","severity":1,"message":"309","line":183,"column":91,"nodeType":"310","messageId":"311","endLine":183,"endColumn":93},{"ruleId":"308","severity":1,"message":"309","line":185,"column":91,"nodeType":"310","messageId":"311","endLine":185,"endColumn":93},{"ruleId":"308","severity":1,"message":"309","line":336,"column":47,"nodeType":"310","messageId":"311","endLine":336,"endColumn":49},{"ruleId":"303","severity":1,"message":"304","line":346,"column":66,"nodeType":"305","messageId":"306","endLine":346,"endColumn":68},{"ruleId":"299","severity":1,"message":"300","line":49,"column":5,"nodeType":"301","messageId":"302","endLine":52,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":80,"column":47,"nodeType":"310","messageId":"311","endLine":80,"endColumn":49},{"ruleId":"295","severity":1,"message":"315","line":94,"column":15,"nodeType":"297","messageId":"298","endLine":94,"endColumn":29},{"ruleId":"295","severity":1,"message":"316","line":99,"column":15,"nodeType":"297","messageId":"298","endLine":99,"endColumn":25},{"ruleId":"308","severity":1,"message":"309","line":180,"column":84,"nodeType":"310","messageId":"311","endLine":180,"endColumn":86},{"ruleId":"308","severity":1,"message":"309","line":239,"column":47,"nodeType":"310","messageId":"311","endLine":239,"endColumn":49},{"ruleId":"308","severity":1,"message":"309","line":253,"column":92,"nodeType":"310","messageId":"311","endLine":253,"endColumn":94},{"ruleId":"308","severity":1,"message":"309","line":262,"column":48,"nodeType":"310","messageId":"311","endLine":262,"endColumn":50},{"ruleId":"308","severity":1,"message":"309","line":283,"column":47,"nodeType":"310","messageId":"311","endLine":283,"endColumn":49},{"ruleId":"308","severity":1,"message":"309","line":299,"column":48,"nodeType":"310","messageId":"311","endLine":299,"endColumn":50},{"ruleId":"308","severity":1,"message":"309","line":320,"column":47,"nodeType":"310","messageId":"311","endLine":320,"endColumn":49},{"ruleId":"308","severity":1,"message":"317","line":346,"column":66,"nodeType":"310","messageId":"311","endLine":346,"endColumn":68},{"ruleId":"308","severity":1,"message":"309","line":364,"column":51,"nodeType":"310","messageId":"311","endLine":364,"endColumn":53},{"ruleId":"299","severity":1,"message":"300","line":47,"column":5,"nodeType":"301","messageId":"302","endLine":50,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":71,"column":47,"nodeType":"310","messageId":"311","endLine":71,"endColumn":49},{"ruleId":"308","severity":1,"message":"309","line":115,"column":91,"nodeType":"310","messageId":"311","endLine":115,"endColumn":93},{"ruleId":"308","severity":1,"message":"309","line":117,"column":91,"nodeType":"310","messageId":"311","endLine":117,"endColumn":93},{"ruleId":"308","severity":1,"message":"309","line":245,"column":47,"nodeType":"310","messageId":"311","endLine":245,"endColumn":49},{"ruleId":"308","severity":1,"message":"309","line":288,"column":37,"nodeType":"310","messageId":"311","endLine":288,"endColumn":39},{"ruleId":"308","severity":1,"message":"309","line":288,"column":68,"nodeType":"310","messageId":"311","endLine":288,"endColumn":70},{"ruleId":"308","severity":1,"message":"309","line":295,"column":47,"nodeType":"310","messageId":"311","endLine":295,"endColumn":49},{"ruleId":"303","severity":1,"message":"304","line":305,"column":66,"nodeType":"305","messageId":"306","endLine":305,"endColumn":68},{"ruleId":"299","severity":1,"message":"300","line":55,"column":5,"nodeType":"301","messageId":"302","endLine":58,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":86,"column":47,"nodeType":"310","messageId":"311","endLine":86,"endColumn":49},{"ruleId":"295","severity":1,"message":"315","line":100,"column":15,"nodeType":"297","messageId":"298","endLine":100,"endColumn":29},{"ruleId":"295","severity":1,"message":"316","line":105,"column":15,"nodeType":"297","messageId":"298","endLine":105,"endColumn":25},{"ruleId":"308","severity":1,"message":"309","line":184,"column":85,"nodeType":"310","messageId":"311","endLine":184,"endColumn":87},{"ruleId":"308","severity":1,"message":"309","line":249,"column":47,"nodeType":"310","messageId":"311","endLine":249,"endColumn":49},{"ruleId":"308","severity":1,"message":"309","line":263,"column":96,"nodeType":"310","messageId":"311","endLine":263,"endColumn":98},{"ruleId":"308","severity":1,"message":"309","line":272,"column":52,"nodeType":"310","messageId":"311","endLine":272,"endColumn":54},{"ruleId":"308","severity":1,"message":"309","line":293,"column":47,"nodeType":"310","messageId":"311","endLine":293,"endColumn":49},{"ruleId":"308","severity":1,"message":"309","line":309,"column":52,"nodeType":"310","messageId":"311","endLine":309,"endColumn":54},{"ruleId":"308","severity":1,"message":"309","line":330,"column":47,"nodeType":"310","messageId":"311","endLine":330,"endColumn":49},{"ruleId":"308","severity":1,"message":"317","line":358,"column":69,"nodeType":"310","messageId":"311","endLine":358,"endColumn":71},{"ruleId":"308","severity":1,"message":"309","line":376,"column":51,"nodeType":"310","messageId":"311","endLine":376,"endColumn":53},{"ruleId":"299","severity":1,"message":"300","line":50,"column":5,"nodeType":"301","messageId":"302","endLine":53,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":86,"column":47,"nodeType":"310","messageId":"311","endLine":86,"endColumn":49},{"ruleId":"318","severity":1,"message":"319","line":179,"column":65,"nodeType":"320","endLine":179,"endColumn":186},{"ruleId":"308","severity":1,"message":"309","line":192,"column":138,"nodeType":"310","messageId":"311","endLine":192,"endColumn":140},{"ruleId":"308","severity":1,"message":"309","line":200,"column":91,"nodeType":"310","messageId":"311","endLine":200,"endColumn":93},{"ruleId":"308","severity":1,"message":"309","line":202,"column":91,"nodeType":"310","messageId":"311","endLine":202,"endColumn":93},{"ruleId":"308","severity":1,"message":"309","line":352,"column":47,"nodeType":"310","messageId":"311","endLine":352,"endColumn":49},{"ruleId":"303","severity":1,"message":"304","line":362,"column":66,"nodeType":"305","messageId":"306","endLine":362,"endColumn":68},{"ruleId":"299","severity":1,"message":"300","line":48,"column":5,"nodeType":"301","messageId":"302","endLine":51,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":83,"column":51,"nodeType":"310","messageId":"311","endLine":83,"endColumn":53},{"ruleId":"308","severity":1,"message":"309","line":93,"column":47,"nodeType":"310","messageId":"311","endLine":93,"endColumn":49},{"ruleId":"308","severity":1,"message":"309","line":137,"column":91,"nodeType":"310","messageId":"311","endLine":137,"endColumn":93},{"ruleId":"308","severity":1,"message":"309","line":139,"column":91,"nodeType":"310","messageId":"311","endLine":139,"endColumn":93},{"ruleId":"308","severity":1,"message":"309","line":155,"column":125,"nodeType":"310","messageId":"311","endLine":155,"endColumn":127},{"ruleId":"308","severity":1,"message":"309","line":165,"column":134,"nodeType":"310","messageId":"311","endLine":165,"endColumn":136},{"ruleId":"308","severity":1,"message":"309","line":267,"column":47,"nodeType":"310","messageId":"311","endLine":267,"endColumn":49},{"ruleId":"308","severity":1,"message":"309","line":309,"column":37,"nodeType":"310","messageId":"311","endLine":309,"endColumn":39},{"ruleId":"308","severity":1,"message":"309","line":309,"column":68,"nodeType":"310","messageId":"311","endLine":309,"endColumn":70},{"ruleId":"308","severity":1,"message":"309","line":316,"column":47,"nodeType":"310","messageId":"311","endLine":316,"endColumn":49},{"ruleId":"303","severity":1,"message":"304","line":326,"column":66,"nodeType":"305","messageId":"306","endLine":326,"endColumn":68},{"ruleId":"299","severity":1,"message":"300","line":43,"column":5,"nodeType":"301","messageId":"302","endLine":46,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":67,"column":47,"nodeType":"310","messageId":"311","endLine":67,"endColumn":49},{"ruleId":"308","severity":1,"message":"309","line":178,"column":47,"nodeType":"310","messageId":"311","endLine":178,"endColumn":49},{"ruleId":"303","severity":1,"message":"304","line":188,"column":66,"nodeType":"305","messageId":"306","endLine":188,"endColumn":68},{"ruleId":"299","severity":1,"message":"300","line":49,"column":5,"nodeType":"301","messageId":"302","endLine":52,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":80,"column":47,"nodeType":"310","messageId":"311","endLine":80,"endColumn":49},{"ruleId":"295","severity":1,"message":"315","line":96,"column":15,"nodeType":"297","messageId":"298","endLine":96,"endColumn":29},{"ruleId":"295","severity":1,"message":"316","line":101,"column":15,"nodeType":"297","messageId":"298","endLine":101,"endColumn":25},{"ruleId":"308","severity":1,"message":"309","line":214,"column":47,"nodeType":"310","messageId":"311","endLine":214,"endColumn":49},{"ruleId":"308","severity":1,"message":"309","line":228,"column":104,"nodeType":"310","messageId":"311","endLine":228,"endColumn":106},{"ruleId":"308","severity":1,"message":"317","line":247,"column":78,"nodeType":"310","messageId":"311","endLine":247,"endColumn":80},{"ruleId":"308","severity":1,"message":"309","line":265,"column":51,"nodeType":"310","messageId":"311","endLine":265,"endColumn":53},{"ruleId":"299","severity":1,"message":"300","line":44,"column":5,"nodeType":"301","messageId":"302","endLine":47,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":73,"column":47,"nodeType":"310","messageId":"311","endLine":73,"endColumn":49},{"ruleId":"308","severity":1,"message":"309","line":110,"column":125,"nodeType":"310","messageId":"311","endLine":110,"endColumn":127},{"ruleId":"308","severity":1,"message":"309","line":183,"column":47,"nodeType":"310","messageId":"311","endLine":183,"endColumn":49},{"ruleId":"303","severity":1,"message":"304","line":193,"column":66,"nodeType":"305","messageId":"306","endLine":193,"endColumn":68},{"ruleId":"295","severity":1,"message":"313","line":19,"column":8,"nodeType":"297","messageId":"298","endLine":19,"endColumn":12},{"ruleId":"299","severity":1,"message":"300","line":55,"column":5,"nodeType":"301","messageId":"302","endLine":58,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":86,"column":47,"nodeType":"310","messageId":"311","endLine":86,"endColumn":49},{"ruleId":"295","severity":1,"message":"315","line":100,"column":15,"nodeType":"297","messageId":"298","endLine":100,"endColumn":29},{"ruleId":"295","severity":1,"message":"316","line":105,"column":15,"nodeType":"297","messageId":"298","endLine":105,"endColumn":25},{"ruleId":"308","severity":1,"message":"309","line":253,"column":47,"nodeType":"310","messageId":"311","endLine":253,"endColumn":49},{"ruleId":"308","severity":1,"message":"309","line":276,"column":64,"nodeType":"310","messageId":"311","endLine":276,"endColumn":66},{"ruleId":"308","severity":1,"message":"309","line":296,"column":47,"nodeType":"310","messageId":"311","endLine":296,"endColumn":49},{"ruleId":"308","severity":1,"message":"309","line":312,"column":64,"nodeType":"310","messageId":"311","endLine":312,"endColumn":66},{"ruleId":"308","severity":1,"message":"309","line":332,"column":47,"nodeType":"310","messageId":"311","endLine":332,"endColumn":49},{"ruleId":"295","severity":1,"message":"313","line":19,"column":8,"nodeType":"297","messageId":"298","endLine":19,"endColumn":12},{"ruleId":"299","severity":1,"message":"300","line":55,"column":5,"nodeType":"301","messageId":"302","endLine":58,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":86,"column":47,"nodeType":"310","messageId":"311","endLine":86,"endColumn":49},{"ruleId":"295","severity":1,"message":"315","line":100,"column":15,"nodeType":"297","messageId":"298","endLine":100,"endColumn":29},{"ruleId":"295","severity":1,"message":"316","line":105,"column":15,"nodeType":"297","messageId":"298","endLine":105,"endColumn":25},{"ruleId":"308","severity":1,"message":"309","line":257,"column":47,"nodeType":"310","messageId":"311","endLine":257,"endColumn":49},{"ruleId":"308","severity":1,"message":"309","line":271,"column":96,"nodeType":"310","messageId":"311","endLine":271,"endColumn":98},{"ruleId":"308","severity":1,"message":"309","line":280,"column":56,"nodeType":"310","messageId":"311","endLine":280,"endColumn":58},{"ruleId":"308","severity":1,"message":"309","line":300,"column":47,"nodeType":"310","messageId":"311","endLine":300,"endColumn":49},{"ruleId":"308","severity":1,"message":"309","line":316,"column":56,"nodeType":"310","messageId":"311","endLine":316,"endColumn":58},{"ruleId":"308","severity":1,"message":"309","line":336,"column":47,"nodeType":"310","messageId":"311","endLine":336,"endColumn":49},{"ruleId":"299","severity":1,"message":"300","line":42,"column":5,"nodeType":"301","messageId":"302","endLine":45,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":137,"column":47,"nodeType":"310","messageId":"311","endLine":137,"endColumn":49},{"ruleId":"303","severity":1,"message":"304","line":147,"column":66,"nodeType":"305","messageId":"306","endLine":147,"endColumn":68},{"ruleId":"299","severity":1,"message":"300","line":43,"column":5,"nodeType":"301","messageId":"302","endLine":46,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":145,"column":47,"nodeType":"310","messageId":"311","endLine":145,"endColumn":49},{"ruleId":"303","severity":1,"message":"304","line":155,"column":66,"nodeType":"305","messageId":"306","endLine":155,"endColumn":68},{"ruleId":"295","severity":1,"message":"296","line":2,"column":10,"nodeType":"297","messageId":"298","endLine":2,"endColumn":14},{"ruleId":"295","severity":1,"message":"313","line":19,"column":8,"nodeType":"297","messageId":"298","endLine":19,"endColumn":12},{"ruleId":"295","severity":1,"message":"314","line":23,"column":19,"nodeType":"297","messageId":"298","endLine":23,"endColumn":24},{"ruleId":"295","severity":1,"message":"321","line":24,"column":8,"nodeType":"297","messageId":"298","endLine":24,"endColumn":18},{"ruleId":"299","severity":1,"message":"300","line":50,"column":5,"nodeType":"301","messageId":"302","endLine":53,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":81,"column":47,"nodeType":"310","messageId":"311","endLine":81,"endColumn":49},{"ruleId":"295","severity":1,"message":"315","line":95,"column":15,"nodeType":"297","messageId":"298","endLine":95,"endColumn":29},{"ruleId":"295","severity":1,"message":"316","line":100,"column":15,"nodeType":"297","messageId":"298","endLine":100,"endColumn":25},{"ruleId":"308","severity":1,"message":"309","line":222,"column":47,"nodeType":"310","messageId":"311","endLine":222,"endColumn":49},"no-native-reassign",["322"],"no-negated-in-lhs",["323"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ToastContainer' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ButtonEditCategoryStyle' is assigned a value but never used.","'swal' is defined but never used.","'Toast' is defined but never used.","'SelectBoxStyle' is assigned a value but never used.","'BadgeStyle' is assigned a value but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'jwt_decode' is defined but never used.","no-global-assign","no-unsafe-negation"]